#
# Copyright and User License
# ~~~~~~~~~~~~~~~~~~~~~~~~~~
# Copyright 2006-2019 CERN and INFN
# 
#
# Please consult the LICENSE file for the license 
#
# DISCLAIMER
# ~~~~~~~~~~
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
# NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, OF
# SATISFACTORY QUALITY, AND FITNESS FOR A PARTICULAR PURPOSE
# OR USE ARE DISCLAIMED. THE COPYRIGHT HOLDERS AND THE
# AUTHORS MAKE NO REPRESENTATION THAT THE SOFTWARE AND
# MODIFICATIONS THEREOF, WILL NOT INFRINGE ANY PATENT,
# COPYRIGHT, TRADE SECRET OR OTHER PROPRIETARY RIGHT.
#
# LIMITATION OF LIABILITY
# ~~~~~~~~~~~~~~~~~~~~~~~
# THE COPYRIGHT HOLDERS AND THE AUTHORS SHALL HAVE NO
# LIABILITY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL,
# CONSEQUENTIAL, EXEMPLARY, OR PUNITIVE DAMAGES OF ANY
# CHARACTER INCLUDING, WITHOUT LIMITATION, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES, LOSS OF USE, DATA OR PROFITS,
# OR BUSINESS INTERRUPTION, HOWEVER CAUSED AND ON ANY THEORY
# OF CONTRACT, WARRANTY, TORT (INCLUDING NEGLIGENCE), PRODUCT
# LIABILITY OR OTHERWISE, ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGES.
#
# Author:	Vasilis.Vlachoudis@cern.ch
# Date:	05-Sep-2006

__author__ = "Vasilis Vlachoudis"
__email__  = "Paola.Sala@mi.infn.it"

# ------------------------- Palettes -------------------------------------------
_FLUKA_PALETTE = (	# Std fluka
	(1.0,  1.0,  1.0),
	(0.8,  0.8,  0.8),
	(0.9,  0.6,  0.9),
	(1.0,  0.4,  1.0),
	(0.9,  0.0,  1.0),
	(0.7,  0.0,  1.0),
	(0.5,  0.0,  0.8),
	(0.0,  0.0,  0.8),
	(0.0,  0.0,  1.0),
	(0.0,  0.6,  1.0),
	(0.0,  0.8,  1.0),
	(0.0,  0.7,  0.5),
	(0.0,  0.9,  0.2),
	(0.5,  1.0,  0.0),
	(0.8,  1.0,  0.0),
	(1.0,  1.0,  0.0),
	(1.0,  0.8,  0.0),
	(1.0,  0.5,  0.0),
	(1.0,  0.0,  0.0),
	(0.8,  0.0,  0.0),
	(0.6,  0.0,  0.0),
	(0.4,  0.0,  0.0),
	(0.0,  0.0,  0.0) )

_GRAY_PALETTE = ((0.0, 0.0, 0.0), (1.0, 1.0, 1.0))	# Gray

_DIF_PALETTE =  ((0.0, 0.0, 1.0), (1.0,  1.0,  1.0), (1.0, 0.0, 0.0))

_RGB_PALETTE = (
	(0.0, 0.0, 0.1294117647),
	(0.0, 0.0, 0.2588235294),
	(0.0, 0.0, 0.3882352941),
	(0.0, 0.0, 0.5176470588),
	(0.0, 0.0, 0.6470588235),
	(0.0, 0.0, 0.7725490196),
	(0.0, 0.0, 0.9019607843),
	(0.0, 0.03137254902, 0.968627451),
	(0.0, 0.1607843137, 0.8392156863),
	(0.0, 0.2901960784, 0.7098039216),
	(0.0, 0.4196078431, 0.5803921569),
	(0.0, 0.5490196078, 0.4509803922),
	(0.0, 0.6784313725, 0.3215686275),
	(0.0, 0.8078431373, 0.1921568627),
	(0.0, 0.937254902, 0.06274509804),
	(0.06274509804, 0.937254902, 0.0),
	(0.1921568627, 0.8078431373, 0.0),
	(0.3215686275, 0.6784313725, 0.0),
	(0.4509803922, 0.5490196078, 0.0),
	(0.5803921569, 0.4196078431, 0.0),
	(0.7098039216, 0.2901960784, 0.0),
	(0.8392156863, 0.1607843137, 0.0),
	(0.968627451, 0.03137254902, 0.0),
	(1.0, 0.09803921569, 0.09803921569),
	(1.0, 0.2274509804, 0.2274509804),
	(1.0, 0.3529411765, 0.3529411765),
	(1.0, 0.4823529412, 0.4823529412),
	(1.0, 0.6117647059, 0.6117647059),
	(1.0, 0.7411764706, 0.7411764706),
	(1.0, 0.8705882353, 0.8705882353),
	(1.0, 1.0, 1.0))

_RAINBOW_PALETTE = (
	(1.0, 0.0, 0.0),
	(1.0, 0.1921568627, 0.0),
	(1.0, 0.3882352941, 0.0),
	(1.0, 0.5803921569, 0.0),
	(1.0, 0.7725490196, 0.0),
	(1.0, 0.968627451, 0.0),
	(0.8392156863, 1.0, 0.0),
	(0.6470588235, 1.0, 0.0),
	(0.4509803922, 1.0, 0.0),
	(0.2588235294, 1.0, 0.0),
	(0.06274509804, 1.0, 0.0),
	(0.0, 1.0, 0.1294117647),
	(0.0, 1.0, 0.3215686275),
	(0.0, 1.0, 0.5176470588),
	(0.0, 1.0, 0.7098039216),
	(0.0, 1.0, 0.9019607843),
	(0.0, 0.9019607843, 1.0),
	(0.0, 0.7098039216, 1.0),
	(0.0, 0.5176470588, 1.0),
	(0.0, 0.3215686275, 1.0),
	(0.0, 0.1294117647, 1.0),
	(0.06274509804, 0.0, 1.0),
	(0.2588235294, 0.0, 1.0),
	(0.4509803922, 0.0, 1.0),
	(0.6470588235, 0.0, 1.0),
	(0.8392156863, 0.0, 1.0),
	(1.0, 0.0, 0.968627451),
	(1.0, 0.0, 0.7725490196),
	(1.0, 0.0, 0.5803921569),
	(1.0, 0.0, 0.3882352941),
	(1.0, 0.0, 0.1921568627),
	(1.0, 0.0, 0.0))

_GOLD_PALETTE = (
	(0.4588235294, 0.06274509804, 0.0),
	(0.5647058824, 0.1254901961,  0.0),
	(0.631372549,  0.1843137255,  0.0),
	(0.6862745098, 0.231372549,   0.0),
	(0.7254901961, 0.2784313725,  0.0),
	(0.7607843137, 0.3176470588,  0.0),
	(0.7921568627, 0.3568627451,  0.0),
	(0.8196078431, 0.3921568627,  0.0),
	(0.8431372549, 0.4274509804,  0.0),
	(0.8666666667, 0.462745098,   0.0),
	(0.8862745098, 0.4941176471,  0.0),
	(0.9019607843, 0.5254901961,  0.0),
	(0.9176470588, 0.5529411765,  0.0),
	(0.9333333333, 0.5843137255,  0.0),
	(0.9490196078, 0.6117647059,  0.0),
	(0.9607843137, 0.6392156863,  0.0),
	(0.9725490196, 0.6666666667,  0.0),
	(0.9843137255, 0.6901960784,  0.0),
	(0.9960784314, 0.7176470588,  0.0),
	(1.0, 0.7411764706, 0.0),
	(1.0, 0.7647058824, 0.0),
	(1.0, 0.7882352941, 0.0),
	(1.0, 0.8117647059, 0.0),
	(1.0, 0.8352941176, 0.0),
	(1.0, 0.8588235294, 0.0),
	(1.0, 0.8823529412, 0.0),
	(1.0, 0.9019607843, 0.0),
	(1.0, 0.9254901961, 0.0),
	(1.0, 0.9450980392, 0.0),
	(1.0, 0.9647058824, 0.0),
	(1.0, 0.9882352941, 0.0))

_GNUPLOT_PALETTE = (
	(0.1803921569, 0.0, 0.2),
	(0.2549019608, 0.0, 0.3960784314),
	(0.3098039216, 0.0, 0.5725490196),
	(0.3607843137, 0.003921568627, 0.7254901961),
	(0.4, 0.003921568627, 0.8470588235),
	(0.4392156863, 0.007843137255, 0.937254902),
	(0.4745098039, 0.01176470588, 0.9882352941),
	(0.5098039216, 0.01568627451, 1),
	(0.537254902, 0.02352941176, 0.968627451),
	(0.568627451, 0.03529411765, 0.8980392157),
	(0.5960784314, 0.0431372549, 0.7921568627),
	(0.6235294118, 0.05882352941, 0.6509803922),
	(0.6470588235, 0.07450980392, 0.4862745098),
	(0.6705882353, 0.09019607843, 0.2980392157),
	(0.6941176471, 0.1137254902, 0.1019607843),
	(0.7176470588, 0.137254902, 0.0),
	(0.7411764706, 0.1647058824, 0.0),
	(0.7607843137, 0.1960784314, 0.0),
	(0.7843137255, 0.231372549, 0.0),
	(0.8039215686, 0.2666666667, 0.0),
	(0.8235294118, 0.3098039216, 0.0),
	(0.8431372549, 0.3568627451, 0.0),
	(0.862745098, 0.4078431373, 0.0),
	(0.8784313725, 0.462745098, 0.0),
	(0.8980392157, 0.5254901961, 0.0),
	(0.9176470588, 0.5882352941, 0.0),
	(0.9333333333, 0.6588235294, 0.0),
	(0.9490196078, 0.737254902, 0.0),
	(0.968627451, 0.8196078431, 0.0),
	(0.9843137255, 0.9058823529, 0.0),
	(1.0, 1.0, 0.0))

_MATLAB_PALETTE = (
	(0.0,0.0,0.5),
	(0.0,0.0,1.0),
	(0.0,0.5,1.0),
	(0.0,1.0,1.0),
	(0.5,1.0,0.5),
	(1.0,1.0,0.0),
	(1.0,0.5,0.0),
	(1.0,0.0,0.0),
	(0.5,0.0,0.0))

PALETTE = {
	"FLUKA"   : _FLUKA_PALETTE,
	"Gray"    : _GRAY_PALETTE,
	"Gnuplot" : _GNUPLOT_PALETTE,
	"Gold"    : _GOLD_PALETTE,
	"RGB"     : _RGB_PALETTE,
	"Rainbow" : _RAINBOW_PALETTE,
	"Matlab"  : _MATLAB_PALETTE,
        "Differ"  : _DIF_PALETTE}

# ------------------------------------------------------------------------------
def RGB(r,g,b):
	return r<<16 | g<<8 | b

def RGB2str(r,g,b):
	return "#%02X%02X%02X"%(r,g,b)

#-------------------------------------------------------------------------------
def resizePalette(palette, n):
	npal  = len(palette)
	palstep = 1.0 / float(npal-1)
	npal -= 1

	step  = 1.0 / float(n-1)
	value = 0.0

	newpalette = []

	for i in range(n):
		ic,rem = divmod(step*float(i), palstep)
		ic = int(ic)
		rem  /= palstep

		def interpolate(a,x,b): return (b-a)*x+a

		if ic<0:
			R,G,B = palette[0]
		elif ic>=npal:
			R,G,B = palette[-1]
		else:
			lo = palette[ic]
			hi = palette[ic+1]
			R = interpolate(lo[0], rem, hi[0])
			G = interpolate(lo[1], rem, hi[1])
			B = interpolate(lo[2], rem, hi[2])

		newpalette.append(int(R*255)<<16 | int(G*255)<<8 | int(B*255))
	return newpalette

#-------------------------------------------------------------------------------
# Return a 256 color palette as RGB for PIL
#-------------------------------------------------------------------------------
def PILPalette(name):
	palette = PALETTE.get(name)
	if palette is None: return None
	pal = []
	for rgb in resizePalette(palette, 256):
		pal.append((rgb>>16) & 0xff)
		pal.append((rgb>>8) & 0xff)
		pal.append(rgb & 0xff)
	return pal
